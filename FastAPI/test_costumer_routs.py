from fastapi.testclient import TestClient
from main import app
import sys
from loguru import logger

fmt = "<green>{time}</green> - {name} - {level} - {message}"

logger.add(sys.stderr, format=fmt, filter="my_module", level="INFO", backtrace=True,
           diagnose=True, colorize=True)
# logger.level("CUSTOM", no=45, color="<red>", icon="üö®")

client = TestClient(app)


item = {
    "descript": "–æ–ø–∏—Å–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∂–µ—Ü",
    "name": "–í—ã–±–æ—Ä–∂–µ—Ü",
}
plus_version_url_api = '/api/v1'


def test_get_costumer():
    logger.info('eggs info')
    logger.warning('eggs warning')
    logger.error('eggs error')
    logger.critical('eggs critical')

    response = client.get(f"{plus_version_url_api}/customer/{item['name']}")
    # LOGGER.info(f'–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response}')

    data = response.json()
    logger.info(f'–ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ —à—Ç–∞–º–ø—É –∏–∑ –ë–î –≤ —Ñ–æ—Ä–º–∞—Ç–µ json: {data}')

    if response.status_code == 200 and data['name'] == item['name'].upper():
        # """–®—Ç–∞–º –µ—Å—Ç—å. –£–¥–∞–ª—è–µ–º"""
        delete(item['name'].upper())
        create(item)
        update(item)
        delete(item['name'].upper())
    else:
        # """–®—Ç–∞–º–ø–∞ –Ω–µ—Ç. –°–æ–∑–¥–∞—ë–º"""
        create(item)
        update(item)
        delete(item['name'].upper())


def delete(id):
    logger.info(f"–®—Ç–∞–º {id}. –£–¥–∞–ª—è–µ–º")
    # assert response.status_code == 200
    response = client.delete(f"{plus_version_url_api}/customer/diecuts/{id}")
    assert response.status_code == 200


def create(id: dict):
    logger.info(f"–°–æ–∑–¥–∞—ë–º —à—Ç–∞–º–ø \n {id['cut_name']}")
    response = client.post(f"{plus_version_url_api}/diecuts/",
                           json=id
                           )
    assert response.status_code == 201
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º
    logger.info("–ü—Ä–æ–≤–µ—Ä—è–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π —à—Ç–∞–º–ø")
    data = response.json()
    logger.info(f"–î–∞–Ω–Ω—ã–µ –∏–∑ –ë–î —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —à—Ç–∞–º–ø–∞ \n {data}")
    assert 'zub_num' in data
    assert 'cut_name' in data

    assert data['cut_name'] == id['cut_name'].upper()
    assert data['zub_num'] == 89
    assert data['hgap'] == float("4.1900")


def update(id: dict):
    id['descript'] = 'test update'
    id['cf2'] = '—Ñ–∞–π–ª CF2 –æ–±–Ω–æ–≤–∏–ª–∏'
    id['hgap'] = 9
    id['vgap'] = 9
    logger.info(f"–¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {id}")
    response = client.patch(f"{plus_version_url_api}/diecuts/{id['cut_name']}",
                            json=id
                            )
    # assert response.status_code == 200
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º
    logger.info("–ü—Ä–æ–≤–µ—Ä—è–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —à—Ç–∞–º–ø")
    data = response.json()
    logger.info(f"–î–∞–Ω–Ω—ã–µ —à—Ç–∞–º–ø–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è \n {data}")
    assert data['descript'] == 'test update'
    assert data['cf2'] == '—Ñ–∞–π–ª CF2 –æ–±–Ω–æ–≤–∏–ª–∏'
    assert data['hgap'] == 9
    assert data['vgap'] == 9
